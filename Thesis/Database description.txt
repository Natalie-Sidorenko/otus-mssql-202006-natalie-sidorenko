В базе три схемы: справочная (References), несущая основную OLTP-нагрузку схема "Накладные" (Invoices) и History - схема, выполняющая роль ROLAP, на основе которой построен куб.
В справочных таблицах лежат списки возможных кладовок (Storerooms), состояний накладной (States) и результатов доставки (Delivery results), которые будет вводить курьер.
Кладовки три: доставка, возврат и прозвон (колл-центр). Состояния бывают "на кладовке" - на любой из них, то есть физически на сортировочном центре, "выдана курьеру" и "доставлена" - возможны у накладных с кладовкой "доставка", "возврат" - возможно у накладных с кладовкой "возврат", это состояние будет устанавливаться при доставке соответствующей возвратной накладной.
Первичные и возвратные накладные находятся в одной таблице, имеется признак is_return.
На таблицу Invoices установлен триггер, который при обновлении столбца текущей даты доставки пишет в таблицу History.History дату доставки и результат доставки в неё.
По умолчанию каждая накладная имеет завтрашнюю дату доставки и находится на кладовке "доставка" (delivery, storeroom_id=1). В качестве даты создания накладной (Creation date) будет устанавливаться GETDATE() при каждом INSERT'e. Внешние ключи "текущая кладовка", "текущее состояние", "последнй результат доставки" ссылаются на таблицы схемы references.
Я создала две циклических последовательности для номеров (столбец Invoice каждой таблицы схемы Invoices) первичных накладных (11-значные на 150-) и возвратных (10-значные на 40-). Подразумевается, что накладных в конечных состояниях постепенно будут убираться в архив, и ID будут освобождаться.
Описание дополняется.